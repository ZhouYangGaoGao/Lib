apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions { abortOnError false }
}

dependencies {
    api 'com.google.android.material:material:1.1.0'
    api 'com.google.code.gson:gson:2.8.6'
    api 'com.wang.avi:library:2.1.3'
    api 'com.facebook.conceal:conceal:2.0.2@aar'//hawk 用到
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:adapter-rxjava:2.9.0'
    api 'io.reactivex:rxandroid:1.2.1'
    api 'org.greenrobot:eventbus:3.2.0'
    api 'xiaofei.library:concurrent-utils:0.1.4'
    api 'com.jakewharton:butterknife:10.2.3'
    api 'com.just.agentweb:agentweb:4.1.3'
    api 'com.download.library:Downloader:4.1.3'
    api 'com.necer.ndialog2:ndialog:1.1.4'
    api 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'
    api 'com.ogaclejapan.smarttablayout:utils-v4:2.0.0@aar'
    api 'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
    api 'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api "androidx.recyclerview:recyclerview:1.1.0"
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.annotation:annotation:1.1.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    api 'androidx.lifecycle:lifecycle-common:2.2.0'
    api 'com.tencent.bugly:crashreport_upgrade:1.4.5'
    api 'pub.devrel:easypermissions:3.0.0'
    api 'com.github.bumptech.glide:glide:4.11.0'
    implementation project(path: ':lifecycle')
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
}

task clearJar(type: Delete) {
    delete 'build/zlib_1.0.jar' //jar包的名字，随便命名 
}
task makeJar(type: Jar) {
    //指定生成的jar名 
    baseName 'zlib_1.0'
    //从哪里打包class文件 
    from('build/intermediates/packaged-classes/debug/default/')
    //打包到jar后的目录结构 
    into('build/')
    //去掉不需要打包的目录和文件 
    exclude('BuildConfig.class', 'R.class')
    //去掉R开头的文件  
    exclude { it.name.startsWith('R'); }
}
makeJar.dependsOn(clearJar, build)
repositories {
    mavenCentral()
}
// must be applied after your artifact generating plugin (eg. java / com.android.library)
//apply plugin: 'com.novoda.bintray-release'
//
//publish {
//    userOrg = 'zhyandrod' //bintray账户下某个组织id
//    groupId = 'com.zhy.zlib' //maven仓库下库的包名，一般为模块包名
//    artifactId = 'zlib' //项目名称
//    publishVersion = '1.0.0' //版本号
//    desc = 'quick for android' //项目介绍，可以不写
//    website = '' //项目主页，可以不写
//}

